{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://api.popc.example.com/schemas/VerifyResponse.json",
  "title": "VerifyResponse",
  "description": "Response from media verification",
  "type": "object",
  "required": [
    "verificationId",
    "mode",
    "verdict",
    "assetSha256",
    "reasons"
  ],
  "properties": {
    "mode": {
      "type": "string",
      "enum": [
        "certified",
        "heuristic"
      ],
      "description": "Verification mode used: 'certified' for cryptographic verification with manifest, 'heuristic' for non-cryptographic analysis without manifest",
      "examples": [
        "certified",
        "heuristic"
      ]
    },
    "verificationId": {
      "type": "string",
      "pattern": "^ver_[a-z0-9]+$",
      "description": "Unique identifier for this verification",
      "examples": [
        "ver_1a2b3c4d5e6f",
        "ver_9z8y7x6w5v4u"
      ]
    },
    "verdict": {
      "type": "string",
      "enum": [
        "verified",
        "tampered",
        "unsigned",
        "invalid",
        "revoked"
      ],
      "description": "Overall verification verdict",
      "examples": [
        "verified",
        "tampered",
        "unsigned"
      ]
    },
    "assetSha256": {
      "type": "string",
      "pattern": "^[a-f0-9]{64}$",
      "description": "SHA-256 hash of the asset",
      "examples": [
        "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        "d4f5e6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5"
      ]
    },
    "reasons": {
      "type": "array",
      "description": "Detailed reasons for the verdict",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "examples": [
        [
          "Content binding hash matches",
          "Signature valid",
          "Device certificate chain valid",
          "Hardware attestation present"
        ],
        [
          "Content binding hash mismatch"
        ],
        [
          "No C2PA manifest found"
        ]
      ]
    },
    "metadata": {
      "type": ["object", "null"],
      "description": "Metadata extracted from the manifest (null if not verified)",
      "properties": {
        "deviceId": {
          "type": "string",
          "pattern": "^dev_[a-z0-9_]+$",
          "description": "Device identifier that captured the media",
          "examples": [
            "dev_android_pixel7_abc123",
            "dev_ios_iphone15_xyz789"
          ]
        },
        "capturedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when media was captured (ISO 8601)",
          "examples": [
            "2024-01-15T10:30:00Z",
            "2024-03-22T14:45:30.123Z"
          ]
        },
        "location": {
          "type": ["object", "null"],
          "description": "Location data (if available and not using ZK proofs)",
          "properties": {
            "latitude": {
              "type": "number",
              "minimum": -90,
              "maximum": 90,
              "description": "Latitude in decimal degrees",
              "examples": [37.7749, 51.5074]
            },
            "longitude": {
              "type": "number",
              "minimum": -180,
              "maximum": 180,
              "description": "Longitude in decimal degrees",
              "examples": [-122.4194, -0.1278]
            },
            "accuracy": {
              "type": "number",
              "minimum": 0,
              "description": "Accuracy in meters",
              "examples": [10, 50, 100]
            }
          },
          "required": ["latitude", "longitude"]
        },
        "deviceModel": {
          "type": "string",
          "description": "Device model information",
          "examples": [
            "Pixel 7",
            "iPhone 15 Pro"
          ]
        },
        "osVersion": {
          "type": "string",
          "description": "Operating system version",
          "examples": [
            "Android 14",
            "iOS 17.2"
          ]
        },
        "manifestVersion": {
          "type": "string",
          "description": "C2PA manifest version",
          "examples": [
            "1.0",
            "1.2"
          ]
        },
        "signatureAlgorithm": {
          "type": "string",
          "enum": [
            "ES256",
            "ES384",
            "ES512",
            "EdDSA"
          ],
          "description": "Signature algorithm used",
          "examples": [
            "ES256",
            "EdDSA"
          ]
        },
        "attestationType": {
          "type": "string",
          "enum": [
            "android_key_attestation",
            "apple_devicecheck",
            "apple_app_attest",
            "webauthn",
            "tpm"
          ],
          "description": "Type of hardware attestation",
          "examples": [
            "android_key_attestation",
            "apple_app_attest"
          ]
        }
      }
    },
    "evidencePackageUrl": {
      "type": ["string", "null"],
      "format": "uri",
      "description": "URL to download complete evidence package (null if not verified)",
      "examples": [
        "https://api.popc.example.com/v1/evidence/ver_1a2b3c4d5e6f",
        null
      ]
    },
    "policyViolations": {
      "type": "array",
      "description": "List of policy violations (if any)",
      "items": {
        "type": "object",
        "required": ["policyRule", "message"],
        "properties": {
          "policyRule": {
            "type": "string",
            "description": "Policy rule that was violated",
            "examples": [
              "require_hardware_attestation",
              "max_clock_skew_seconds"
            ]
          },
          "message": {
            "type": "string",
            "description": "Human-readable violation message",
            "examples": [
              "Hardware attestation required but not present",
              "Timestamp skew exceeds 300 seconds"
            ]
          }
        }
      }
    },
    "transparencyLogEntry": {
      "type": ["object", "null"],
      "description": "Transparency log entry information",
      "properties": {
        "logId": {
          "type": "string",
          "description": "Transparency log entry identifier",
          "examples": [
            "tlog_abc123def456"
          ]
        },
        "merkleRoot": {
          "type": "string",
          "pattern": "^[a-f0-9]{64}$",
          "description": "Merkle root hash at time of insertion",
          "examples": [
            "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"
          ]
        },
        "inclusionProof": {
          "type": "array",
          "description": "Merkle inclusion proof hashes",
          "items": {
            "type": "string",
            "pattern": "^[a-f0-9]{64}$"
          }
        }
      },
      "required": ["logId", "merkleRoot"]
    },
    "verifiedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when verification was performed (ISO 8601)",
      "examples": [
        "2024-01-15T10:35:22Z"
      ]
    },
    "confidence_score": {
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "description": "Confidence score (0-100). Required when mode='heuristic'. Optional when mode='certified' (may be 100 for verified).",
      "examples": [
        100,
        78,
        32
      ]
    },
    "signals": {
      "type": "object",
      "description": "Heuristic signals collected during analysis. Required when mode='heuristic', should be absent or null when mode='certified'.",
      "properties": {
        "exif": {
          "type": "object",
          "description": "EXIF metadata extracted from the asset",
          "required": ["present"],
          "properties": {
            "present": {
              "type": "boolean",
              "description": "Whether EXIF metadata was found"
            },
            "camera": {
              "type": "string",
              "description": "Camera make/model from EXIF"
            },
            "software": {
              "type": "string",
              "description": "Software used to process the image"
            },
            "createDate": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp from EXIF"
            },
            "gps": {
              "type": "object",
              "properties": {
                "lat": {
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "description": "Latitude in decimal degrees"
                },
                "lon": {
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "description": "Longitude in decimal degrees"
                }
              }
            }
          }
        },
        "jpeg": {
          "type": "object",
          "description": "JPEG compression analysis",
          "properties": {
            "recompressionDetected": {
              "type": "boolean",
              "description": "Whether multiple compression cycles were detected"
            },
            "quantTableAnomaly": {
              "type": "boolean",
              "description": "Whether quantization table shows anomalies"
            },
            "progressive": {
              "type": "boolean",
              "description": "Whether the JPEG uses progressive encoding"
            }
          }
        },
        "noise": {
          "type": "object",
          "description": "Photo Response Non-Uniformity (PRNU) analysis",
          "required": ["prnuChecked"],
          "properties": {
            "prnuChecked": {
              "type": "boolean",
              "description": "Whether PRNU analysis was performed"
            },
            "matched": {
              "type": "boolean",
              "description": "Whether PRNU pattern matched a known device"
            },
            "score": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "PRNU match confidence score (0-100)"
            }
          }
        },
        "ml": {
          "type": "object",
          "description": "Machine learning analysis (placeholder for future use)",
          "properties": {
            "model": {
              "type": "string",
              "description": "ML model used for analysis"
            },
            "score": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "ML analysis confidence score"
            }
          }
        },
        "reverse_image": {
          "type": "object",
          "description": "Reverse image search results",
          "required": ["attempted"],
          "properties": {
            "attempted": {
              "type": "boolean",
              "description": "Whether reverse image search was attempted"
            },
            "earliestFound": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest date this image was found online"
            },
            "source": {
              "type": "string",
              "format": "uri",
              "description": "URL where the image was found"
            }
          }
        },
        "upload_channel": {
          "type": "object",
          "description": "Upload channel security signals",
          "properties": {
            "signedForm": {
              "type": "boolean",
              "description": "Whether the upload form was cryptographically signed"
            }
          }
        }
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "mode": {
            "const": "heuristic"
          }
        }
      },
      "then": {
        "required": ["confidence_score", "signals"]
      }
    }
  ],
  "examples": [
    {
      "verificationId": "ver_1a2b3c4d5e6f",
      "mode": "certified",
      "verdict": "verified",
      "confidence_score": 100,
      "assetSha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "reasons": [
        "Content binding hash matches",
        "Signature valid",
        "Device certificate chain valid",
        "Hardware attestation present"
      ],
      "metadata": {
        "deviceId": "dev_android_pixel7_abc123",
        "capturedAt": "2024-01-15T10:30:00Z",
        "location": {
          "latitude": 37.7749,
          "longitude": -122.4194,
          "accuracy": 10
        },
        "deviceModel": "Pixel 7",
        "osVersion": "Android 14",
        "manifestVersion": "1.0",
        "signatureAlgorithm": "ES256",
        "attestationType": "android_key_attestation"
      },
      "evidencePackageUrl": "https://api.popc.example.com/v1/evidence/ver_1a2b3c4d5e6f",
      "policyViolations": [],
      "transparencyLogEntry": {
        "logId": "tlog_abc123def456",
        "merkleRoot": "a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2",
        "inclusionProof": [
          "b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3",
          "c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4"
        ]
      },
      "verifiedAt": "2024-01-15T10:35:22Z"
    },
    {
      "verificationId": "ver_9z8y7x6w5v4u",
      "mode": "certified",
      "verdict": "tampered",
      "assetSha256": "d4f5e6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5",
      "reasons": [
        "Content binding hash mismatch"
      ],
      "metadata": null,
      "evidencePackageUrl": null,
      "policyViolations": [],
      "transparencyLogEntry": null,
      "verifiedAt": "2024-01-15T11:22:45Z"
    },
    {
      "verificationId": "ver_h1x2y3z4w5v6",
      "mode": "heuristic",
      "verdict": "unsigned",
      "confidence_score": 78,
      "assetSha256": "c1d2e3f4a5b6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2",
      "reasons": [
        "No C2PA manifest found",
        "Running heuristic analysis"
      ],
      "metadata": null,
      "evidencePackageUrl": null,
      "policyViolations": [],
      "transparencyLogEntry": null,
      "verifiedAt": "2024-01-15T12:10:33Z",
      "signals": {
        "exif": {
          "present": true,
          "camera": "Canon EOS R5",
          "createDate": "2024-01-15T10:30:00Z",
          "gps": {
            "lat": 37.7749,
            "lon": -122.4194
          }
        },
        "jpeg": {
          "recompressionDetected": false,
          "quantTableAnomaly": false,
          "progressive": true
        },
        "noise": {
          "prnuChecked": false
        },
        "reverse_image": {
          "attempted": false
        }
      }
    }
  ]
}
